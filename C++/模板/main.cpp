//#include "main.h"
#include "main-stl.h"

/*
	泛型编程
	通过模板 - 通用性
	快速开发，必须传入数据才能使用，模板是专用的

	模板： 
	 1、函数模板
	 2、类模板

*/
int main() {

	//cout << "\n **** \t第30-模板" << endl;
	//test30();

	//cout << "\n **** \t第31-模板-排序" << endl;
	//test31();

	//cout << "\n **** \t第32-模板函数和普通函数调用规则" << endl;
	//test32();

	//cout << "\n **** \t第33-模板的局限性" << endl;
	//test33();

	//cout << "\n **** \t第34-类模板" << endl;
	//test34();

	//cout << "\n **** \t第35-类模板和函数模板的区别" << endl;
	//test35();

	//cout << "\n **** \t第36-类模板的成员函数创建时机" << endl;
	//test36();

	//cout << "\n **** \t第37-类模板做函数参数" << endl;
	//test37();

	//cout << "\n **** \t第38-类模板和继承" << endl;
	//test38();

	//cout << "\n **** \t第39-类模板成员函数类外实现" << endl;
	//test39();

	//cout << "\n **** \t第41-类模板和友元" << endl;
	//test41();

	//cout << "\n **** \t第41.5-指针和堆" << endl;
	//test_P();

	//cout << "\n **** \t第42-模板案例 - 数组类封装" << endl;
	//test42();

	

	//cout << "\n **** \t第50-STL - vector数组" << endl;
	//test50();

	//cout << "\n **** \t第51-vector - 存放自定义数据" << endl;
	//test51();

	//cout << "\n **** \t第52-vector容器 嵌套容器" << endl;
	//test52();

	//cout << "\n **** \t第53-string容器  - 189, 196" << endl;
	//test53();

	//cout << "\n **** \t第54-vector容器-197-203" << endl;
	//test54();

	//cout << "\n **** \t第55-deque容器 - 204-209" << endl;
	//test55();

	//cout << "\n **** \t第56-stack容器 - 211-212" << endl;
	//test56();

	//cout << "\n **** \t第57-queue容器 - 213-214" << endl;
	//test57();

	//cout << "\n **** \t第58-list容器 - 215-222" << endl;
	//test58();


	//cout << "\n **** \t第59-set容器 - 223 - 230" << endl;
	//test59();

	//cout << "\n **** \t第60-map容器 - 231-235" << endl;
	//test60();

	//cout << "\n **** \t第61-函数对象 - 237-242" << endl;
	//test61();

	//cout << "\n **** \t第62-常用遍历算法 - 243-245" << endl;
	//test62();

	cout << "\n **** \t第63-常用查找算法 - 246-250" << endl;
	test63();

	cout << "\n **** \t第" << endl;

	cout << "\n **** \t第" << endl;


	cout << "\n **** \t第" << endl;

	cout << "\n **** \t第" << endl;

	cout << "\n **** \t第" << endl;



	system("pause");
	return 0;
}